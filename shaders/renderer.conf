

//import "samplers.conf"
//import "gbuffer-nvidia.conf"


surface depth {

	width  SCREEN_WIDTH;
	height SCREEN_HEIGHT;

	format {  // Try to use a 32-bit float depth buffer

		"d32-sfloat",
		"d32-sfloat-s8-uint",
		"d24-unorm-s8-uint"

	}

//	sampler none;

}


surface color {

	width  SCREEN_WIDTH;
	height SCREEN_HEIGHT;

	format { "r16g16b16a16-sfloat" }

}

surface blurh {

	width  SCREEN_WIDTH;
	height SCREEN_HEIGHT;

	format { "r16g16b16a16-sfloat" }

}

surface blurhv {

	width  SCREEN_WIDTH;
	height SCREEN_HEIGHT;

	format { "r16g16b16a16-sfloat" }

}

surface normal {

	width  SCREEN_WIDTH;
	height SCREEN_HEIGHT;

	format { "r16g16b16a16-sfloat" }

}


renderpass ambience {

	width  SCREEN_WIDTH;
	height SCREEN_HEIGHT;

	output color:  load:clear(0.0, 0.0, 0.0, 0.0), store:preserve;
	output normal: load:clear(0.5, 0.5, 1.0, 0.0), store:preserve;
	output depth:  load:clear(1.0),                store:preserve;

}


renderpass blurh {

	width  SCREEN_WIDTH;
	height SCREEN_HEIGHT;

	input color, 0;

	output blurh: load:clear(0.0, 0.0, 0.0, 0.0), store:preserve;

}


renderpass blurhv {

	width  SCREEN_WIDTH;
	height SCREEN_HEIGHT;

	input blurh, 0;

	output blurhv: load:clear(0.0, 0.0, 0.0, 0.0), store:preserve;

}


renderpass postprocess {

	width  SCREEN_WIDTH;
	height SCREEN_HEIGHT;

	input color,  0;
	input normal, 1;
	input blurhv, 2;

	output framebuffer: load:preserve, store:preserve;
	output depth:       load:preserve, store:preserve;

}


shader "scanline.spirv";
shader "suzanne.spirv";
shader "blurh.spirv";
shader "blurhv.spirv";
